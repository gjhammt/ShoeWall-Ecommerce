define(["jquery","Handlebars","handlebars-core","pubsub"],function(i,e,s,n){var c={config:{template:"html.search-speech-recognition.base",listenClassName:"listen",submitClassName:"submit",classes:{formElement:"topnav-search-form",searchInput:"topnav-search-input",searchButton:"topnav-search-button",searchButtonContainer:"topnav-search-button-container",speechButton:"speech-search-button",iconSpeech:"icon-speech"}},init:function(e){var s=this;s.elements={},void 0!==e&&(s.config=i.extend({},s.config,e));var n=i.Deferred();return i.when(s._build()).then(function(){n.resolve(s)}),n},_build:function(){var s=this;return s.loadAndCompileTemplate().done(function(e){s.render()}).fail(function(){})},render:function(e){var s=this;s.template=s.compiledTemplate();i("."+s.config.classes.searchButtonContainer).after(s.template).ready(function(){s.cacheDOM(s.config.classes,"class"),s.events()})},updateSearch:function(e){this.elements.searchInput.val(e).trigger("speech.change")},switchIconState:function(e){var s=this;switch(e){case"enabled":s.removeClass(s.elements.iconSpeech,s.config.listenClassName),s.removeClass(s.elements.iconSpeech,s.config.submitClassName);break;case"listen":s.removeClass(s.elements.iconSpeech,s.config.submitClassName),s.addClass(s.elements.iconSpeech,s.config.listenClassName);break;case"submit":s.removeClass(s.elements.iconSpeech,s.listenClassName),s.addClass(s.elements.iconSpeech,s.config.submitClassName);break;default:s.removeClass(s.elements.iconSpeech,s.config.listenClassName),s.removeClass(s.elements.iconSpeech,s.config.submitClassName)}},addClass:function(e,s){i(e).addClass(s)},removeClass:function(e,s){i(e).removeClass(s)},subscribe:function(){var n=this;i.pubsub("subscribe","vfdp.speechrecognition.enabled",function(e,s){n.init(s.options)}),i.pubsub("subscribe","vfdp.speechrecognition.result",function(e,s){n.switchIconState("submit"),n.updateSearch(s.search)}),i.pubsub("subscribe","vfdp.speechrecognition.start",function(e,s){n.switchIconState("listen")}),i.pubsub("subscribe","vfdp.speechrecognition.end",function(e,s){n.switchIconState("enabled")}),i.pubsub("subscribe","vfdp.speechrecognition.error",function(e,s){n.switchIconState("enabled")})},unsubscribe:function(){i.pubsub("unsubscribe","vfdp.speechrecognition.enabled"),i.pubsub("unsubscribe","vfdp.speechrecognition.result"),i.pubsub("unsubscribe","vfdp.speechrecognition.start"),i.pubsub("unsubscribe","vfdp.speechrecognition.end"),i.pubsub("unsubscribe","vfdp.speechrecognition.error"),i.pubsub("unsubscribe","vfdp.speechrecognition.subscribe"),i.pubsub("unsubscribe","vfdp.speechrecognition.unsubscribe")},events:function(){var e=this;e.elements.searchInput.on("speech.change",function(){i.pubsub("publish","vfdp.speechrecognitionview.searchTriggered"),e.elements.searchButton.trigger("click")}),e.elements.speechButton.on("click",function(){i.pubsub("publish","vfdp.speechrecognitionview.click")})},listen:function(){var n=this;i.pubsub("subscribe","vfdp.speechrecognition.unsubscribe",function(e,s){n.unsubscribe()}),i.pubsub("subscribe","vfdp.speechrecognition.subscribe",function(e,s){n.subscribe()})},cacheDOM:function(e,s){var n=this,c="class"===s?".":"#";i.each(e,function(e,s){n.elements[e]=i(c+s)})}};return(c=i.extend({},s,c)).listen(),c});
//# sourceMappingURL=../../../maps/js/vfdp/ui/speechRecognitionView.hash-0c679ad9f7c6a45e82c6ed6a0d1337ff.js.map